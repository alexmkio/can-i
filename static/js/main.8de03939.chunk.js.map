{"version":3,"sources":["components/search/Search.js","components/results/Results.js","utils/time.js","components/hourCard/HourCard.js","components/possibilities/Possibilities.js","components/calendar/Calendar.js","utils/httpResponses.js","components/error/Error.js","utils/fetchCalls.js","utils/cleanData.js","utils/utils.js","components/app/App.js","index.js"],"names":["Search","getForecast","useState","minTemp","setMinTemp","maxTemp","setMaxTemp","wind","setWindSpeed","precipProbability","setProbability","name","value","onChange","event","Number","target","to","onClick","temperature","windSpeed","probOfPrecip","Results","result","notice","nice","hours","className","months","number","HourCard","hour","addToCalendar","month","find","time","thisHour","icon","inCalendar","day","probabilityOfPrecipitation","Possibilities","suitableHours","hourCards","map","suitableHour","Calendar","calendar","httpResponses","Error","errorCode","clearSelected","response","code","message","description","fetchData","url","a","fetch","checkForError","ok","status","json","data","cleanData","forecast","tempObjects","getTemperature","windObjects","getWindSpeed","preciptObjects","getProbabilityOfPrecipitation","currentTempObj","matchingWindObj","currentWindObj","matchingPreciptObj","currentPreciptObj","precipProb","properties","values","reduce","newArray","currentValueObject","fullArray","validTime","split","dateArray","hoursThisLasts","join","i","thisDay","weatherObj","push","Math","round","determineSuitableHours","thresholds","cleanedData","timezone","currentDateInHours","findUsersDateInHours","filter","currentHourObj","craftNotice","nextOpportunity","incremented","incrementingCurrentHours","every","hourObject","weatherDateInHours","splitDate","Date","toLocaleString","timeZone","App","coordinates","setCoordinates","setForecast","setErrorCode","setSuitableHours","setNotice","setCalendar","fetchAndCleanData","weatherURL","latitude","longitude","gridPoints","forecastGridData","useEffect","suitable","thatOne","indexOf","includes","currentCalendar","ind","splice","exact","path","render","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8de03939.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport './Search.css';\n\nexport const Search = ({ getForecast }) => {\n  const [minTemp, setMinTemp] = useState(50);\n  const [maxTemp, setMaxTemp] = useState(90);\n  const [wind, setWindSpeed] = useState(10);\n  const [precipProbability, setProbability] = useState(50);\n\n  const onSubmitSearch = () => {\n    let thresholds = {\n      temperature: { minTemp, maxTemp },\n      windSpeed: wind,\n      probOfPrecip: precipProbability\n    }\n    getForecast(thresholds)\n  }\n\n  return (\n    <form>\n      <h2>Select your weather thresholds and find out if you can go outside</h2>\n      \n      <label>\n          Min Temperature: \n        <select name='minTemp' value={minTemp}\n          onChange={event => setMinTemp(Number(event.target.value))}\n        >\n          <option value={40}>40</option>\n          <option value={50}>50</option>\n          <option value={60}>60</option>\n        </select>\n      </label>\n\n      <label>\n          Max Temperature: \n        <select name='maxTemp' value={maxTemp}\n          onChange={event => setMaxTemp(Number(event.target.value))}\n        >\n          <option value={80}>80</option>\n          <option value={90}>90</option>\n          <option value={100}>100</option>\n        </select>\n      </label>\n\n      <label>\n          Wind Speed: \n        <select name='wind' value={wind}\n          onChange={event => setWindSpeed(Number(event.target.value))}\n        >\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={20}>20</option>\n          <option value={30}>30</option>\n        </select>\n      </label>\n\n      <label>\n          Probability of Precipitation: \n        <select name='precipProbability' value={precipProbability}\n          onChange={event => setProbability(Number(event.target.value))}\n        >\n          <option value={30}>30</option>\n          <option value={50}>50</option>\n          <option value={70}>70</option>\n        </select>\n      </label>\n\n      <Link name='submit' to='/results' onClick={() => onSubmitSearch()}>\n        Submit\n      </Link>\n        \n    </form>\n  )\n};\n\nSearch.propTypes = {\n  getForecast: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Results.css';\n\nexport const Results = ({ notice }) => {\n  let result\n  if (notice.nice) {\n    result = <><h2>Good news!</h2>\n      <p>You can go outside for {notice.hours} hours!</p></>\n  } else {\n    result = <><h2>Bad news</h2>\n      <p>You can't go outside for {notice.hours} hours!</p></>\n  }\n\n  return (\n    <section className='results'>\n      {result}\n      <Link to='/good_weather'>See all the future good weather</Link>\n    </section>\n  )\n};\n\nResults.propTypes = {\n  notice: PropTypes.object.isRequired\n};","export const months = [\n  { number: 1, name: 'January' },\n  { number: 2, name: 'February' },\n  { number: 3, name: 'March' },\n  { number: 4, name: 'April' },\n  { number: 5, name: 'May' },\n  { number: 6, name: 'June' },\n  { number: 7, name: 'July' },\n  { number: 8, name: 'August' },\n  { number: 9, name: 'September' },\n  { number: 10, name: 'October' },\n  { number: 11, name: 'November' },\n  { number: 12, name: 'December' }\n]\n\nexport const hours = [\n  { number: 0, name: '12 AM' },  \n  { number: 1, name: '1 AM' },\n  { number: 2, name: '2 AM' },\n  { number: 3, name: '3 AM' },\n  { number: 4, name: '4 AM' },\n  { number: 5, name: '5 AM' },\n  { number: 6, name: '6 AM' },\n  { number: 7, name: '7 AM' },\n  { number: 8, name: '8 AM' },\n  { number: 9, name: '9 AM' },\n  { number: 10, name: '10 AM' },\n  { number: 11, name: '11 AM' },\n  { number: 12, name: '12 PM' },\n  { number: 13, name: '1 PM' },\n  { number: 14, name: '2 PM' },\n  { number: 15, name: '3 PM' },\n  { number: 16, name: '4 PM' },\n  { number: 17, name: '5 PM' },\n  { number: 18, name: '6 PM' },\n  { number: 19, name: '7 PM' },\n  { number: 20, name: '8 PM' },\n  { number: 21, name: '9 PM' },\n  { number: 22, name: '10 PM' },\n  { number: 23, name: '11 PM' }\n]","import PropTypes from 'prop-types';\nimport './HourCard.css';\nimport { months, hours } from '../../utils/time'\n\nexport const HourCard = ({ hour, addToCalendar }) => {\n  let month = months.find(month => month.number === hour.month).name\n  let time = hours.find(thisHour => thisHour.number === hour.hour).name\n  let icon = (hour.inCalendar ? 'remove' : 'add')\n\n  return (\n    <article className='card'>\n      <label>\n        <button className=\"material-icons-outlined md-24 icon\"\n          onClick={() => addToCalendar(hour)}\n        >\n          {icon}\n        </button>\n      </label>\n\n      <dl>\n        <dt>Date:</dt>\n        <dd>{month} {hour.day}</dd>\n\n        <dt>Hour:</dt>\n        <dd>{time}</dd>\n\n        <dt>Temperature:</dt>\n        <dd>{hour.temperature} <span>&#8457;</span></dd>\n\n        <dt>Wind Speed:</dt>\n        <dd>{hour.windSpeed} mph</dd>\n\n        <dt>Probability of Precipitation:</dt>\n        <dd>{hour.probabilityOfPrecipitation}%</dd>\n      </dl>\n    </article>\n  )\n};\n\nHourCard.propTypes = {\n  hour: PropTypes.object.isRequired,\n  addToCalendar: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { HourCard } from \"../hourCard/HourCard\"\nimport './Possibilities.css';\n\nexport const Possibilities = ({ suitableHours, addToCalendar }) => {\n  let hourCards = suitableHours.map(suitableHour => {\n    return (\n      <HourCard\n        key={`${suitableHour.month}${suitableHour.day}${suitableHour.hour}`}\n        hour={suitableHour}\n        addToCalendar={addToCalendar}\n      />\n    )\n  })\n\n  return (\n    <section className='poss'>\n      <section className='possBlurb'>\n        <h2>Suitable hours to be outside</h2>\n        <p>Click on an hour to add or delete it from your calendar</p>\n        <Link to='/calendar'>Your calendar</Link>\n      </section>\n      <section className='cards'>\n        {hourCards}\n      </section>\n    </section>\n  )\n};\n\nPossibilities.propTypes = {\n  suitableHours: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addToCalendar: PropTypes.func.isRequired\n};","import PropTypes from 'prop-types';\nimport { HourCard } from \"../hourCard/HourCard\"\n\nexport const Calendar = ({ calendar, addToCalendar }) => {\n  let hourCards = calendar.map(hour => {\n    return (\n      <HourCard\n        key={`${hour.month}${hour.day}${hour.hour}`}\n        hour={hour}\n        addToCalendar={addToCalendar}\n      />\n    )\n  })\n\n  return (\n    <section className='poss'>\n      <section className='possBlurb'>\n        <h2>Your calendar</h2>\n        <p>Click on an hour to delete it from your calendar</p>\n      </section>\n      <section className='cards'>\n        {hourCards}\n      </section>\n    </section>\n  )\n};\n\nCalendar.propTypes = {\n  calendar: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addToCalendar: PropTypes.func.isRequired\n};","export const httpResponses = [\n  {\n    \"code\": 301,\n    \"message\": \"Moved Permanently\",\n    \"description\": `The URL of the requested resource has been changed\n      permanently. The new URL is given in the response.`,\n  },\n  {\n    \"code\": 401,\n    \"message\": \"Unauthorized\",\n    \"description\": `Although the HTTP standard specifies \"unauthorized\",\n      semantically this response means \"unauthenticated\". That is, the client\n      must authenticate itself to get the requested response.`,\n  },\n  {\n    \"code\": 403,\n    \"message\": \"Forbidden\",\n    \"description\": `The client does not have access rights to the content;\n      that is, it is unauthorized, so the server is refusing to give the\n      requested resource. Unlike 401, the client's identity is known to the\n      server.`,\n  },\n  {\n    \"code\": 404,\n    \"message\": \"Not Found\",\n    \"description\": `The server can not find the requested resource. In the\n      browser, this means the URL is not recognized. In an API, this can also\n      mean that the endpoint is valid but the resource itself does not exist.\n      Servers may also send this response instead of 403 to hide the existence\n      of a resource from an unauthorized client. This response code is probably \n      the most famous one due to its frequent occurrence on the web.`,\n  },\n  {\n    \"code\": 408,\n    \"message\": \"Request Timeout\",\n    \"description\": `This response is sent on an idle connection by some \n      servers, even without any previous request by the client. It means that \n      the server would like to shut down this unused connection. This response \n      is used much more since some browsers, like Chrome, Firefox 27+, or IE9, \n      use HTTP pre-connection mechanisms to speed up surfing. Also note that \n      some servers merely shut down the connection without sending this \n      message.`,\n  },\n  {\n    \"code\": 429,\n    \"message\": \"Too Many Requests\",\n    \"description\": `The user has sent too many requests in a given amount of \n      time (\"rate limiting\").`,\n  },\n  {\n    \"code\": 500,\n    \"message\": \"Internal Server Error\",\n    \"description\": `The server has encountered a situation it doesn't know how \n      to handle.`,\n  },\n  {\n    \"code\": 502,\n    \"message\": \"Bad Gateway\",\n    \"description\": `This error response means that the server, while working as \n      a gateway to get a response needed to handle the request, got an invalid \n      response.`,\n  },\n  {\n    \"code\": 503,\n    \"message\": \"Service Unavailable\",\n    \"description\": `The server is not ready to handle the request. Common \n      causes are a server that is down for maintenance or that is overloaded. \n      Note that together with this response, a user-friendly page explaining \n      the problem should be sent. This response should be used for temporary \n      conditions and the Retry-After: HTTP header should, if possible, contain \n      the estimated time before the recovery of the service. The webmaster must \n      also take care about the caching-related headers that are sent along with \n      this response, as these temporary condition responses should usually not \n      be cached.`,\n  },\n  {\n    \"code\": 504,\n    \"message\": \"Gateway Timeout\",\n    \"description\": `This error response is given when the server is acting as a \n      gateway and cannot get a response in time.`,\n  }\n]","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Error.css';\nimport { httpResponses } from '../../utils/httpResponses'\n\nexport const Error = ({ errorCode, clearSelected }) => {\n  let response = httpResponses.find(response =>\n    response.code === Number(errorCode)\n  )\n  return (\n    <article className='error-container'>\n      <div className='error-div'>\n        <h2 className='error-h2'>Error {response.code}</h2>\n        <h3>{response.message}</h3>\n        <p>{response.description}</p>\n        <Link to='/'>\n          <button className='details-back' onClick={clearSelected}>Back</button>\n        </Link>\n      </div>\n    </article>\n  )\n}\n\nError.propTypes = {\n  errorCode: PropTypes.string.isRequired,\n  clearSelected: PropTypes.func.isRequired\n};","export const fetchData = async (url) => {\n  let response = await fetch(url, {\n    'User-Agent': `(https://github.com/alexmkio/can-i,\n      alexandermartelkio@gmail.com)`\n  });\n  return checkForError(response);\n};\n\nconst checkForError = async (response) => {\n  if (!response.ok) {\n    throw new Error(response.status);\n  } else {\n    let data = await response.json()\n    return data\n  }\n}","export const cleanData = (forecast) => {\n  let tempObjects = getTemperature(forecast)\n  let windObjects = getWindSpeed(forecast)\n  let preciptObjects = getProbabilityOfPrecipitation(forecast)\n\n  return tempObjects.map(currentTempObj => {\n    let matchingWindObj = windObjects.find(currentWindObj => {\n      if (currentWindObj.month === currentTempObj.month && \n        currentWindObj.day === currentTempObj.day && \n        currentWindObj.hour === currentTempObj.hour\n      ) {\n        return currentWindObj\n      }\n    })\n    let matchingPreciptObj = preciptObjects.find(currentPreciptObj => {\n      if (currentPreciptObj.month === currentTempObj.month && \n        currentPreciptObj.day === currentTempObj.day && \n        currentPreciptObj.hour === currentTempObj.hour\n      ) {\n        return currentPreciptObj\n      }\n    })\n    if (matchingWindObj) {\n      currentTempObj.windSpeed = matchingWindObj.windSpeed\n    }\n    if (matchingPreciptObj) {\n      currentTempObj.probabilityOfPrecipitation = matchingPreciptObj.precipProb\n    }\n    return currentTempObj\n  })\n};\n\nconst getTemperature = (forecast) => {\n  let tempValues = forecast.properties.temperature.values\n  return tempValues.reduce((newArray, currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = fullArray.join().split('H').join().split(',')[2]\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour,\n        inCalendar: false,\n        temperature: ((currentValueObject.value * (9 / 5)) + 32) \n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getWindSpeed = (forecast) => {\n  let windValues = forecast.properties.windSpeed.values\n  return windValues.reduce((newArray, currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = fullArray.join().split('H').join().split(',')[2]\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour, \n        windSpeed: Math.round(currentValueObject.value / 1.609344) \n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}\n\nconst getProbabilityOfPrecipitation = (forecast) => {\n  let precipValues = forecast.properties.probabilityOfPrecipitation.values\n  return precipValues.reduce((newArray, currentValueObject) => {\n    let fullArray = currentValueObject.validTime.split('T')\n    let dateArray = fullArray[0].split('-')\n    let month = Number(dateArray[1])\n    let day = Number(dateArray[2])\n    let hour = Number(fullArray[1].split(':')[0])\n    let hoursThisLasts = fullArray.join().split('H').join().split(',')[2]\n\n    for (let i = 0; i < hoursThisLasts; i++) {\n      let thisMonth = month\n      let thisDay = day\n      let thisHour = hour + i\n      if (thisHour > 23) {\n        thisDay++\n        thisHour = thisHour - 24\n      }\n      let weatherObj = { \n        month: thisMonth, \n        day: thisDay, \n        hour: thisHour, \n        precipProb: currentValueObject.value \n      }\n      newArray.push(weatherObj)\n    }\n    return newArray\n  }, [])\n}","export const determineSuitableHours = (thresholds, cleanedData, timezone) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  return cleanedData.filter(currentHourObj => {\n    let weatherDateInHours = ((currentHourObj.day * 24) + currentHourObj.hour)\n    if (weatherDateInHours >= currentDateInHours && \n      currentHourObj.temperature <= thresholds.temperature.maxTemp && \n      currentHourObj.temperature >= thresholds.temperature.minTemp && \n      currentHourObj.windSpeed <= thresholds.windSpeed && \n      currentHourObj.probabilityOfPrecipitation <= thresholds.probOfPrecip\n    ) {\n      return currentHourObj\n    }\n  })\n};\n\nexport const craftNotice = (suitableHours, timezone) => {\n  let currentDateInHours = findUsersDateInHours(timezone)\n  let incremented = 0\n  let nextOpportunity\n  let incrementingCurrentHours = currentDateInHours\n\n  suitableHours.every(hourObject => {\n    let weatherDateInHours = ((hourObject.day * 24) + hourObject.hour)\n    if (incrementingCurrentHours === weatherDateInHours) {\n      incremented++\n      incrementingCurrentHours++\n      return true\n    } else {\n      nextOpportunity = weatherDateInHours - currentDateInHours\n      return false\n    }\n  })\n\n  if (incremented) {\n    return { nice: true, hours: incremented }\n  } else {\n    return { nice: false, hours: nextOpportunity }\n  }\n};\n\nconst findUsersDateInHours = (timezone) => {\n  let splitDate = new Date().toLocaleString(\"en-US\", {timeZone: timezone})\n    .split('/').join(':').split(':').join(', ').split(', ').join(' ').split(' ')\n  let hour = Number(splitDate[3])\n  if (splitDate[6] === 'PM') {\n    hour = hour + 12\n  }\n  return ((Number(splitDate[1]) * 24) + hour)\n}","import React, { useState, useEffect } from 'react';\nimport { Link, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Search } from '../search/Search';\nimport { Results } from '../results/Results'\nimport { Possibilities } from '../possibilities/Possibilities'\nimport { Calendar } from '../calendar/Calendar'\nimport { Error } from '../error/Error'\nimport { fetchData } from '../../utils/fetchCalls';\nimport { cleanData } from '../../utils/cleanData';\nimport { determineSuitableHours, craftNotice } from '../../utils/utils'\n\nexport const App = () => {\n  const [coordinates, setCoordinates] = useState({});\n  const [forecast, setForecast] = useState([]);\n  const [errorCode, setErrorCode] = useState('');\n  const [suitableHours, setSuitableHours] = useState([]);\n  const [notice, setNotice] = useState({});\n  const [calendar, setCalendar] = useState([]);\n\n  const fetchAndCleanData = async () => {\n    let apiKey = `103a0ac5b110412c9a639e3ab5afd99f`\n    let weatherURL = `https://api.weather.gov/points/`\n    try {\n      let coordinates = await fetchData(\n        `https://api.ipgeolocation.io/ipgeo?apiKey=${apiKey}`\n      )\n      let gridPoints = await fetchData(\n        `${weatherURL}${coordinates.latitude},${coordinates.longitude}`\n      )\n      let forecast = await fetchData(gridPoints.properties.forecastGridData)\n      let cleanedData = await cleanData(forecast)\n      setCoordinates(coordinates)\n      setForecast(cleanedData)\n    } catch (error) {\n      setErrorCode(error.message)\n    }\n  };\n\n  useEffect(() => {\n    fetchAndCleanData()\n  }, [])\n\n  const getForecast = async (thresholds) => {\n    let suitableHours = await determineSuitableHours(\n      thresholds,\n      forecast,\n      coordinates.timezone\n    )\n    let notice = craftNotice(suitableHours, coordinates.timezone)\n    setSuitableHours(suitableHours)\n    setNotice(notice)\n  };\n\n  const clearSelected = () => {\n    setErrorCode('')\n  }\n\n  const addToCalendar = (hourObject) => {\n    let suitable = suitableHours\n    let thatOne = suitable.indexOf(hourObject)\n    if (calendar.includes(hourObject)) {\n      let currentCalendar = calendar\n      let ind = currentCalendar.indexOf(hourObject)\n      currentCalendar.splice(ind, 1)\n      suitable[thatOne].inCalendar = false\n      setCalendar([...currentCalendar])\n    } else {\n      suitable[thatOne].inCalendar = true\n      setCalendar([...calendar, hourObject])\n    }\n    setSuitableHours([...suitable])\n  }\n\n  return (\n    <>\n      <header>\n        <Link to='/'>\n          <h1>Can I look at a tree?</h1>\n        </Link>\n      </header>\n      <main>\n        {errorCode &&\n          <Error errorCode={errorCode} clearSelected={clearSelected} />\n        }\n        {!errorCode && (\n          <Switch>\n            <Route exact path='/' render={() =>\n              <Search getForecast={getForecast} /> \n            }/>\n\n            <Route exact path='/results' render={() =>\n              <Results notice={notice} />\n            }/>\n\n            <Route exact path='/good_weather' render={() =>\n              <Possibilities\n                suitableHours={suitableHours}\n                addToCalendar={addToCalendar}\n              />\n            }/>\n\n            <Route exact path='/calendar' render={() =>\n              <Calendar calendar={calendar} addToCalendar={addToCalendar} />\n            }/>\n\n            <Route exact path='/404' render={() =>\n              <Error errorCode={404} clearSelected={clearSelected} />\n            }/>\n            \n            <Redirect to='/404' />\n          </Switch>\n        )}\n      </main>\n    </>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/app/App';\nimport { HashRouter } from 'react-router-dom';\n\nconst router = <HashRouter> <App /> </HashRouter>;\n\nReactDOM.render(router, document.getElementById('root'));"],"sourceRoot":""}